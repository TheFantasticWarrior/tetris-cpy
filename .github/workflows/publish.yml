name: Test
on: [push]

permissions:
  contents: read

jobs:

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Download SDL2 for Windows
        run: |
          mkdir SDL2
          curl -L https://www.libsdl.org/release/SDL2-devel-2.0.14-VC.zip -o SDL2/SDL2.zip
          Expand-Archive -Path SDL2/SDL2.zip -DestinationPath SDL2
          
      - name: Set up SDL2 Environment Variables
        run: |
          $SDL2_Version = (Get-ChildItem "$(Get-Location)\SDL2" | Where-Object { $_.PSIsContainer }).Name
          echo "SDL2_INCLUDE_DIR=$(Get-Location)\SDL2\$SDL2_Version\include\SDL2" >> $env:GITHUB_ENV
          echo "SDL2_LIB_DIR=$(Get-Location)\SDL2\$SDL2_Version\lib" >> $env:GITHUB_ENV
          ls "$(Get-Location)\SDL2\$SDL2_Version\include"
      - name: Install and build
        run: |
          cd render
          python -m pip install --upgrade pip
          pip install build
          set SDL2_INCLUDE_DIR=%SDL2_INCLUDE_DIR%
          set SDL2_LIB_DIR=%SDL2_LIB_DIR%
          python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: render/dist/*.whl

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install SDL2 on macOS
        run: |
          brew update
          brew install sdl2
      - name: Install and build
        run: |
          cd render

          SDL2_VERSION=$(brew info sdl2 --json | jq -r '.[0].versions.stable')
          export CFLAGS="-std=c++11 -I/usr/local/Cellar/sdl2/$SDL2_VERSION/include/SDL2 -DSDL_DISABLE_IMMINTRIN_H"
          export LDFLAGS="-L/usr/local/Cellar/sdl2/$SDL2_VERSION/lib"
          python -m pip install --upgrade pip
          pip install build
          python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: render/dist/*.whl
  nore_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Build package
        run: |
          python -m pip install --upgrade pip
          pip install build
          cd nore
          if [ "${{ runner.os }}" = "macOS" ]; then
            export CFLAGS="-std=c++11"
          fi
          python -m build
        shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: nore/dist/*.whl
  build_linux:
    needs: [build_windows, build_macos,nore_build]
    runs-on: ubuntu-latest
    container: 
      quay.io/pypa/manylinux_2_28_x86_64
    steps:
      - uses: actions/checkout@v3
      - name: Install and build
        run: |
          cd render
          yum -y install SDL2-devel
          #sudo apt-get install libsdl2-dev
          export CFLAGS="-I/usr/include/SDL2" 
          export LDFLAGS="-L/usr/lib" 
          for PYBIN in /opt/python/*/bin; do
            "${PYBIN}/pyproject-build"
          done
          auditwheel repair dist.whl
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: render/dist/
  build_linux_nore:
    needs: [build_linux, build_windows, build_macos,nore_build]
    runs-on: ubuntu-latest
    container: 
      quay.io/pypa/manylinux_2_28_x86_64
    steps:
      - uses: actions/checkout@v3
      - name: Install and build
        run: |
          cd nore
          for PYBIN in /opt/python/*/bin; do
            "${PYBIN}/pyproject-build"
          done
          auditwheel repair dist.whl
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: nore/dist/


  publish:
    needs: [build_linux, build_linux_nore, build_windows, build_macos,nore_build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-package
          path: dist/*.whl
      - name: list packages
        run: ls dist/*.whl

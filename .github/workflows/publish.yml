name: Test
on: [push]

permissions:
  contents: read

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install and build
        run: |
          sudo apt-get install libsdl2-dev
          export CFLAGS="-I/usr/include/SDL2" 
          export LDFLAGS="-L/usr/lib" 
          python -m pip install --upgrade pip
          pip install build auditwheel
          cd render
          python -m build
          auditwheel repair dist/*.whl
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: render/dist/*

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Download SDL2 for Windows
        run: |
          mkdir SDL2
          curl -L https://www.libsdl.org/release/SDL2-devel-2.0.14-VC.zip -o SDL2/SDL2.zip
          Expand-Archive -Path SDL2/SDL2.zip -DestinationPath SDL2
          
      - name: Set C++ flags
        run: |
          echo "export CPPFLAGS=\"-I$(Get-Location)\SDL2\include\"" >> $GITHUB_ENV
          echo "export LDFLAGS=\"-L$(Get-Location)\SDL2\lib\"" >> $GITHUB_ENV

      - name: Install and build
        run: |
          python -m pip install --upgrade pip
          pip install build
          cd render
          python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: render/dist/*

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install SDL2 on macOS
        run: |
          brew update
          brew install sdl2
      - name: Install and build
        run: |
          python -m pip install --upgrade pip
          export CXXFLAGS="-std=c++11"
          pip install build
          pwd
          ls
          cd render
          python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: render/dist/*
  common_steps:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Build package
        run: |
          python -m pip install --upgrade pip
          pip install build
          cd nore
          export CXXFLAGS="-std=c++11"
          python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: nore/dist/*

  publish:
    needs: [build_linux, build_windows, build_macos,common_steps]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-package
          path: dist
      - name: list packages
        run: ls dist
